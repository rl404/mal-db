// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package api

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Axel",
            "url": "https://github.com/rl404",
            "email": "axel.rl.404@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/anime/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anime"
                ],
                "summary": "Get anime details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Anime ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Anime"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/anime/{id}/characters": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anime"
                ],
                "summary": "Get anime character list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Anime ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.AnimeCharacter"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/anime/{id}/staff": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anime"
                ],
                "summary": "Get anime staff list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Anime ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/anime/{id}/stats": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anime"
                ],
                "summary": "Get anime stats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Anime ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Stats"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/character/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "character"
                ],
                "summary": "Get character details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Character"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/character/{id}/anime": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "character"
                ],
                "summary": "Get character animeography list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/character/{id}/manga": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "character"
                ],
                "summary": "Get character mangaography list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/character/{id}/va": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "character"
                ],
                "summary": "Get character voice actor list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/compare/score": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Entry stats history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Manga title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "-title",
                            "score",
                            "-score"
                        ],
                        "type": "string",
                        "description": "Order (negative means descending)",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.ScoreComparison"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/enqueue": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Enqueue entry",
                "parameters": [
                    {
                        "description": "entry type and id",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.enqueueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/genres/anime": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genre"
                ],
                "summary": "Get anime genre list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Item"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/genres/manga": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genre"
                ],
                "summary": "Get manga genre list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Item"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/magazines": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "magazine"
                ],
                "summary": "Get magazine list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Item"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/manga/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manga"
                ],
                "summary": "Get manga details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Manga ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Manga"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/manga/{id}/characters": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manga"
                ],
                "summary": "Get manga character list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Manga ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/manga/{id}/stats": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manga"
                ],
                "summary": "Get manga stats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Manga ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Stats"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/people/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Get people details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "People ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.People"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/people/{id}/manga": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Get people published manga list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "People ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/people/{id}/staff": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Get people staff role list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "People ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/people/{id}/va": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Get people character role list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "People ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.VoiceActor"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/producers": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "producer"
                ],
                "summary": "Get producer list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Item"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Quick search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entry name",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Entry"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/search/anime": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search anime",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Anime title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10
                        ],
                        "type": "integer",
                        "description": "Score",
                        "name": "score",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                        ],
                        "type": "integer",
                        "description": "Anime type (1=TV, 2=OVA, 3=Movie, 4=Special, 5=ONA, 6=Music)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2,
                            3
                        ],
                        "type": "integer",
                        "description": "Anime airing status (1=airing, 2=finished, 3=upcoming)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                        ],
                        "type": "integer",
                        "description": "Anime rating (1=G, 2=PG, 3=PG13, 4=R17, 5=R, 6=RX)",
                        "name": "rating",
                        "in": "query"
                    },
                    {
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14
                        ],
                        "type": "integer",
                        "description": "Anime source (1=original, 2=manga, 3=4-koma, 4=web manga, 5=digital manga, 6=novel, 7=light novel, 8=visual novel, 9=game, 10=card game, 11=book, 12=picture book, 13=radio, 14=music)",
                        "name": "source",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Airing year",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "winter",
                            "spring",
                            "summer",
                            "fall"
                        ],
                        "type": "string",
                        "description": "Season",
                        "name": "season",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "member",
                            "-member",
                            "title",
                            "-title",
                            "score",
                            "-score"
                        ],
                        "type": "string",
                        "description": "Order (negative means descending)",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Start airing year",
                        "name": "start_year",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "End airing year",
                        "name": "end_year",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum episode count",
                        "name": "start_episode",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum episode count",
                        "name": "end_episode",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum duration (in minutes)",
                        "name": "start_duration",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum duration (in minutes)",
                        "name": "end_duration",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Producer ID",
                        "name": "producer",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Genre ID (negative means to exclude the genre)",
                        "name": "genre",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Media"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/search/character": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search character",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Character name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name",
                            "-name",
                            "favorite",
                            "-favorite"
                        ],
                        "type": "string",
                        "description": "Order (negative means descending)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Entry"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/search/manga": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search manga",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Manga title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10
                        ],
                        "type": "integer",
                        "description": "Score",
                        "name": "score",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8
                        ],
                        "type": "integer",
                        "description": "Manga type (1=manga, 2=light novel, 3=one-shot, 4=doujinshi, 5=manhwa, 6=manhua, 7=oel, 8=novel)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5
                        ],
                        "type": "integer",
                        "description": "Manga publishing status (1=publishing, 2=finished, 3=upcoming, 4=hiatus, 5=discontinued)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Publishing year",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "member",
                            "-member",
                            "title",
                            "-title",
                            "score",
                            "-score"
                        ],
                        "type": "string",
                        "description": "Order (negative means descending)",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Start publishing year",
                        "name": "start_year",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "End publishing year",
                        "name": "end_year",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum chapter count",
                        "name": "start_chapter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum chapter count",
                        "name": "end_chapter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum volume count",
                        "name": "start_volume",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum volume count",
                        "name": "end_volume",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Magazine ID",
                        "name": "magazine",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Genre ID (negative means to exclude the genre)",
                        "name": "genre",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Media"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/search/people": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search people",
                "parameters": [
                    {
                        "type": "string",
                        "description": "People name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name",
                            "-name",
                            "favorite",
                            "-favorite"
                        ],
                        "type": "string",
                        "description": "Order (negative means descending)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Entry"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stats/history/{type}/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Entry stats history",
                "parameters": [
                    {
                        "enum": [
                            "anime",
                            "manga",
                            "character",
                            "people"
                        ],
                        "type": "string",
                        "description": "Entry type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.StatsHistory"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/summary/total": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Get all entry count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Total"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/summary/year": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Get yearly summar count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.YearSummary"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.enqueueRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Airing": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "string"
                },
                "end": {
                    "$ref": "#/definitions/model.Date"
                },
                "start": {
                    "$ref": "#/definitions/model.Date"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "model.AlternativeTitle": {
            "type": "object",
            "properties": {
                "english": {
                    "type": "string"
                },
                "japanese": {
                    "type": "string"
                },
                "synonym": {
                    "type": "string"
                }
            }
        },
        "model.Anime": {
            "type": "object",
            "properties": {
                "airing": {
                    "$ref": "#/definitions/model.Airing"
                },
                "alternativeTitles": {
                    "$ref": "#/definitions/model.AlternativeTitle"
                },
                "duration": {
                    "type": "string"
                },
                "episode": {
                    "type": "integer"
                },
                "favorite": {
                    "type": "integer"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "licensors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "member": {
                    "type": "integer"
                },
                "popularity": {
                    "type": "integer"
                },
                "premiered": {
                    "type": "string"
                },
                "producers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "rank": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                },
                "related": {
                    "$ref": "#/definitions/model.Related"
                },
                "score": {
                    "type": "number"
                },
                "songs": {
                    "$ref": "#/definitions/model.Song"
                },
                "source": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "studios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "synopsis": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "video": {
                    "type": "string"
                },
                "voter": {
                    "type": "integer"
                }
            }
        },
        "model.AnimeCharacter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "voiceActors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                }
            }
        },
        "model.Character": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "favorite": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "japaneseName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicknames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.Date": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "integer"
                },
                "month": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "model.Entry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.EntryScore": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Item": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Manga": {
            "type": "object",
            "properties": {
                "alternativeTitles": {
                    "$ref": "#/definitions/model.AlternativeTitle"
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "chapter": {
                    "type": "integer"
                },
                "favorite": {
                    "type": "integer"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "member": {
                    "type": "integer"
                },
                "popularity": {
                    "type": "integer"
                },
                "publishing": {
                    "$ref": "#/definitions/model.Publishing"
                },
                "rank": {
                    "type": "integer"
                },
                "related": {
                    "$ref": "#/definitions/model.Related"
                },
                "score": {
                    "type": "number"
                },
                "serializations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "synopsis": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "volume": {
                    "type": "integer"
                },
                "voter": {
                    "type": "integer"
                }
            }
        },
        "model.Media": {
            "type": "object",
            "properties": {
                "favorite": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "member": {
                    "type": "integer"
                },
                "popularity": {
                    "type": "integer"
                },
                "rank": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "voter": {
                    "type": "integer"
                }
            }
        },
        "model.People": {
            "type": "object",
            "properties": {
                "alternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "birthday": {
                    "$ref": "#/definitions/model.Date"
                },
                "familyName": {
                    "type": "string"
                },
                "favorite": {
                    "type": "integer"
                },
                "givenName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "more": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "model.Publishing": {
            "type": "object",
            "properties": {
                "end": {
                    "$ref": "#/definitions/model.Date"
                },
                "start": {
                    "$ref": "#/definitions/model.Date"
                }
            }
        },
        "model.Related": {
            "type": "object",
            "properties": {
                "adaptation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                },
                "alternativeSetting": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                },
                "alternativeVersion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                },
                "character": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                },
                "fullStory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                },
                "other": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                },
                "parentStory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                },
                "prequel": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                },
                "sequel": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                },
                "sideStory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                },
                "spinOff": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                },
                "summary": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Source"
                    }
                }
            }
        },
        "model.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "model.Score": {
            "type": "object",
            "properties": {
                "1": {
                    "$ref": "#/definitions/model.ScoreDetail"
                },
                "10": {
                    "$ref": "#/definitions/model.ScoreDetail"
                },
                "2": {
                    "$ref": "#/definitions/model.ScoreDetail"
                },
                "3": {
                    "$ref": "#/definitions/model.ScoreDetail"
                },
                "4": {
                    "$ref": "#/definitions/model.ScoreDetail"
                },
                "5": {
                    "$ref": "#/definitions/model.ScoreDetail"
                },
                "6": {
                    "$ref": "#/definitions/model.ScoreDetail"
                },
                "7": {
                    "$ref": "#/definitions/model.ScoreDetail"
                },
                "8": {
                    "$ref": "#/definitions/model.ScoreDetail"
                },
                "9": {
                    "$ref": "#/definitions/model.ScoreDetail"
                }
            }
        },
        "model.ScoreComparison": {
            "type": "object",
            "properties": {
                "anime": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EntryScore"
                    }
                },
                "manga": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EntryScore"
                    }
                },
                "novel": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EntryScore"
                    }
                }
            }
        },
        "model.ScoreDetail": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "number"
                },
                "vote": {
                    "type": "integer"
                }
            }
        },
        "model.Song": {
            "type": "object",
            "properties": {
                "ending": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "opening": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.Source": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Stats": {
            "type": "object",
            "properties": {
                "score": {
                    "$ref": "#/definitions/model.Score"
                },
                "summary": {
                    "$ref": "#/definitions/model.Summary"
                }
            }
        },
        "model.StatsHistory": {
            "type": "object",
            "properties": {
                "favorite": {
                    "type": "integer"
                },
                "member": {
                    "type": "integer"
                },
                "month": {
                    "type": "integer"
                },
                "popularity": {
                    "type": "integer"
                },
                "rank": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "voter": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "model.Summary": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "integer"
                },
                "current": {
                    "type": "integer"
                },
                "dropped": {
                    "type": "integer"
                },
                "onHold": {
                    "type": "integer"
                },
                "planned": {
                    "type": "integer"
                }
            }
        },
        "model.Total": {
            "type": "object",
            "properties": {
                "anime": {
                    "type": "integer"
                },
                "character": {
                    "type": "integer"
                },
                "manga": {
                    "type": "integer"
                },
                "people": {
                    "type": "integer"
                }
            }
        },
        "model.VoiceActor": {
            "type": "object",
            "properties": {
                "anime": {
                    "$ref": "#/definitions/model.Role"
                },
                "character": {
                    "$ref": "#/definitions/model.Role"
                }
            }
        },
        "model.YearSummary": {
            "type": "object",
            "properties": {
                "anime": {
                    "$ref": "#/definitions/model.YearSummaryDetail"
                },
                "manga": {
                    "$ref": "#/definitions/model.YearSummaryDetail"
                }
            }
        },
        "model.YearSummaryDetail": {
            "type": "object",
            "properties": {
                "avgScore": {
                    "type": "number"
                },
                "count": {
                    "type": "integer"
                },
                "maxScore": {
                    "type": "number"
                },
                "minScore": {
                    "type": "number"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "utils.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "type": "object"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{"http", "https"},
	Title:       "MAL-DB API",
	Description: "MyAnimeList database dump and API.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
